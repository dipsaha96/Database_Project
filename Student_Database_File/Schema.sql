CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID INT PRIMARY KEY,
    NAME VARCHAR(50)
);

CREATE TABLE STUDENT (
    STUDENT_ID INT PRIMARY KEY,
    NAME VARCHAR(100),
    ADDRESS VARCHAR(255),
    PHONE_NUMBER VARCHAR(15),
    DATE_OF_BIRTH DATE,
    LEVEL INT,
    TERM INT,
    EMAIL VARCHAR(100),
    BANK_ACCOUNT_NO VARCHAR(20),
    DEPARTMENT_ID INT,
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID)
);

CREATE TABLE TEACHER (
    TEACHER_ID INT PRIMARY KEY,
    PHONE_NUMBER VARCHAR(15),
    EMAIL VARCHAR(100),
    ADDRESS VARCHAR(255),
    NAME VARCHAR(100),
    DEPARTMENT_ID INT,
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID)
);

CREATE TABLE COURSE (
    COURSE_ID INT PRIMARY KEY,
    COURSE_TITLE VARCHAR(255),
    START_TIME DATE,
    END_TIME DATE,
    TOTAL_LECTURES INT,
    CREDIT INT
);

CREATE TABLE LECTURES (
    LECTURE_ID INT PRIMARY KEY,
    COURSE_ID INT,
    TEACHER_ID INT,
    LESSON_COUNT INT,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (TEACHER_ID) REFERENCES TEACHER(TEACHER_ID)
);

CREATE TABLE ATTENDANCES (
    STUDENT_ID INT,
    NUMBER_OF_PRESENT_ATTENDANCE INT,
    LECTURE_ID INT,
    PRIMARY KEY (STUDENT_ID, LECTURE_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
    FOREIGN KEY (LECTURE_ID) REFERENCES LECTURES(LECTURE_ID)
);
--DROP TABLE CT
CREATE TABLE CT (
    CT_ID INT PRIMARY KEY,
    CT_TITLE VARCHAR(255),
    EXAM_DATE DATE,
    START_TIME TIME,
    ENDING_TIME TIME
);

CREATE TABLE TERM_FINAL (
    TERM_FINAL_ID INT PRIMARY KEY,
    EXAM_DATE DATE,
    START_TIME TIME,
    TIME_DURATION VARCHAR(255)
);
--DROP TABLE PROJECT
CREATE TABLE PROJECT (
    PROJECT_ID INT PRIMARY KEY,
    PROJECT_TITLE VARCHAR(255),
	SUBMISSION_DATE DATE
);

CREATE TABLE ASSIGNMENT (
    ASSIGNMENT_ID INT PRIMARY KEY,
    ASSIGNMENT_TITLE VARCHAR(100),
    SUBMISSION_DATE DATE
);

CREATE TABLE PAYMENT (
    FEES_ID INT,
    PAYMENT_ID INT PRIMARY KEY,
    AMOUNT DECIMAL(10, 2),
    BANK_ACCOUNT_NO VARCHAR(20)
);

CREATE TABLE GRADE (
    GRADE_ID INT PRIMARY KEY,
    STUDENT_ID INT,
    TERM_WISE_RESULT VARCHAR(50),
    TOTAL_RESULT VARCHAR(50),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
);

CREATE TABLE FEES (
    FEES_ID INT PRIMARY KEY,
    DINING_FEE DECIMAL(10, 2),
    HALL_FEE DECIMAL(10, 2),
    REGISTRATION_FEE DECIMAL(10, 2),
    STUDENT_ID INT,
    PAYMENT_ID INT,
    DUE_AMOUNT DECIMAL(10, 2),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
    FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID)
);

CREATE TABLE USERS(
	USER_ID INT PRIMARY KEY,
	PASSWORD VARCHAR(50)
);

